version: '3.9'
services:
  db:
    container_name: postgres_db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db_data:/var/lib/postgresql/data
    networks:
      - db

  api:
    container_name: api
    build: .
    stdin_open: true
    tty: true
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - elastic
      - db
      - redis

  redis:
    container_name: redis
    restart: unless-stopped
    image: redis:alpine 
    ports:
        - "6379:6379"
    networks:
      - redis
    depends_on:
      - api
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    container_name: elasticsearch
    networks:
      - elastic
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node

  kibana:
    depends_on:
      - elasticsearch
    image: docker.elastic.co/kibana/kibana:8.7.0
    container_name: kibana
    networks:
      - elastic
    volumes:
      - kibana-data:/usr/share/kibana/data
    ports:
     - 5601:5601
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
volumes:
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local
  db_data:
    driver: local
networks:
  elastic:
    driver: bridge
  db:
    driver: bridge
  redis:
    driver: bridge